{"version":3,"sources":["notes.ts","scales.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["notes","sharp","flat","AScales","len","flatten","BScales","map","b","head","tail","a","tag","scale","CScales","c","getStepsA","concat","getStepsB","getStepsC","scales","length","highlightColor","getComputedStyle","document","documentElement","getPropertyValue","lowLightColor","playingColor","randomNumber","n","Math","floor","random","rotate","array","start","modStart","mod","slice","modNotes","getNearestModulo","current","target","m","q","pp","round","App","React","useState","stepsBetween","setStepsBetween","modOffset","setModOffset","modRoot","setModRoot","loaded","state","setState","width","window","innerWidth","height","innerHeight","setWindow","useSpring","springRoot","springOffset","config","tension","friction","mass","playing","notesToPlay","useEffect","listener","addEventListener","removeEventListener","synth","Synth","toDestination","interval","note","triggerAttack","octave","setInterval","triggerRelease","clearInterval","root","offset","setRootNearestModule","newRoot","setOffsetNearestModule","newOffset","containerSize","min","fontSize","arcSize","PI","fontStyle","absIndices","reduce","soFar","modIndices","i","included","_","includes","colors","inc","arcGen","d3","padAngle","innerRadius","outerRadius","startAngle","endAngle","cornerRadius","arcs","arcInfo","zip","x","noteNames","replace","noteNamesInfo","className","style","onClick","newScale","absIndex","color","d","svg","interpolate","r","stroke","e","shiftKey","indexOf","name","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b91fed38.chunk.js","sourcesContent":["export type Note = { sharp: string; flat: string };\nexport const notes: Note[] = [\n  { sharp: \"c\", flat: \"c\" },\n  { sharp: \"c#\", flat: \"db\" },\n  { sharp: \"d\", flat: \"d\" },\n  { sharp: \"d#\", flat: \"eb\" },\n  { sharp: \"e\", flat: \"e\" },\n  { sharp: \"f\", flat: \"f\" },\n  { sharp: \"f#\", flat: \"gb\" },\n  { sharp: \"g\", flat: \"g\" },\n  { sharp: \"g#\", flat: \"ab\" },\n  { sharp: \"a\", flat: \"a\" },\n  { sharp: \"a#\", flat: \"bb\" },\n  { sharp: \"b\", flat: \"b\" },\n];\nexport const NUM_NOTES = notes.length;\n","import * as A from \"fp-ts/lib/Array\";\nimport { flatten } from \"fp-ts/lib/Array\";\nimport { NUM_NOTES } from \"./notes\";\n\ntype AScale = { head: [1]; tail: B } | { head: [1, 1]; tail: B };\ntype BScale =\n  | { head: [2]; tail: C }\n  | { head: [2, 3]; tail: C }\n  | { head: [3]; tail: A };\ntype CScale = A | B | null;\n\ntype A = { tag: \"A\"; scale: AScale };\ntype B = { tag: \"B\"; scale: BScale };\ntype C = { tag: \"C\"; scale: CScale };\n\nfunction AScales(len: number): A[] {\n  if (len <= 1) {\n    return [];\n  }\n  return flatten<AScale>([\n    BScales(len - 1).map((b: B) => ({ head: [1], tail: b })),\n    BScales(len - 2).map((b: B) => ({ head: [1, 1], tail: b })),\n  ]).map((a: AScale) => ({ tag: \"A\", scale: a }));\n}\n\nfunction BScales(len: number): B[] {\n  if (len <= 0) {\n    return [];\n  }\n  return flatten<BScale>([\n    AScales(len - 3).map((a: A): BScale => ({ head: [3], tail: a })),\n    CScales(len - 2).map((c: C) => ({ head: [2], tail: c })),\n    CScales(len - 5).map((c: C) => ({ head: [2, 3], tail: c })),\n  ]).map((b: BScale) => ({ tag: \"B\", scale: b }));\n}\n\nfunction CScales(len: number): C[] {\n  if (len < 0) {\n    return [];\n  } else if (len == 0) {\n    return [{ tag: \"C\", scale: null }];\n  } else {\n    return flatten<A | B>([AScales(len), BScales(len)]).map((c: CScale) => ({\n      tag: \"C\",\n      scale: c,\n    }));\n  }\n}\n\nfunction getStepsA(a: A): number[] {\n  const head: number[] = a.scale.head;\n  if (a.scale.tail === null) {\n    return head;\n  }\n  return head.concat(getStepsB(a.scale.tail));\n}\n\nfunction getStepsB(b: B): number[] {\n  const head: number[] = b.scale.head;\n  switch (b.scale.tail.tag) {\n    case \"A\":\n      return head.concat(getStepsA(b.scale.tail));\n    case \"C\":\n      return head.concat(getStepsC(b.scale.tail));\n  }\n}\n\nfunction getStepsC(c: C): number[] {\n  if (c.scale === null) {\n    return [];\n  }\n  switch (c.scale.tag) {\n    case \"A\":\n      return getStepsA(c.scale);\n    case \"B\":\n      return getStepsB(c.scale);\n  }\n}\n\nexport const scales: number[][] = CScales(NUM_NOTES).map(getStepsC);\n","import React, { useEffect, useState } from \"react\";\nimport \"./scales\";\nimport { scales } from \"./scales\";\nimport { Note, notes } from \"./notes\";\nimport { Synth } from \"tone\";\nimport * as d3 from \"d3\";\nimport \"./styles.scss\";\nimport { animated, useSpring } from \"react-spring\";\nimport { zip } from \"fp-ts/Array\";\n\nconst backgroundColor = getComputedStyle(\n  document.documentElement\n).getPropertyValue(\"--bg\");\nconst highlightColor = getComputedStyle(\n  document.documentElement\n).getPropertyValue(\"--hl\");\nconst lowLightColor = getComputedStyle(\n  document.documentElement\n).getPropertyValue(\"--ll\");\nconst playingColor = getComputedStyle(\n  document.documentElement\n).getPropertyValue(\"--pl\");\n\nexport type Scale = number[];\nexport type State =\n  | { loaded: false }\n  | {\n      loaded: true;\n      synth: Synth;\n      notesToPlay: Scale;\n    };\n\nfunction randomNumber(n: number): number {\n  return Math.floor(Math.random() * n);\n}\n\nfunction rotate<X>(array: X[], start: number) {\n  let modStart = mod(start, array.length);\n  return array.slice(modStart).concat(array.slice(0, modStart));\n}\n// function zip3<A, B, C>(a: A[], b: B[], c: C[]): [A, B, C][] {\n//   return zip(zip(a, b), c).map(([[a, b], c]) => [a, b, c]);\n// }\n//\n// function zip4<A, B, C, D>(a: A[], b: B[], c: C[], d: D[]): [A, B, C, D][] {\n//   return zip(zip(zip(a, b), c), d).map(([[[a, b], c], d]) => [a, b, c, d]);\n// }\n\nfunction mod(a: number, b: number) {\n  return ((a % b) + b) % b;\n}\n\nfunction modNotes(a: number) {\n  return mod(a, notes.length);\n}\n\n// useNearestModulo returns a value minimizing the distance traveled around a\n// circle. It always satisfies useNearestModulo(P, N % M, M) % M = N.\n//\n// useNearestModulo(P, N, M) finds N' that minimizes |N' - P|\n// with the constraint that N' % M = N % M,\n//\n// Examples:\n//   useNearestModulo(5, 0, 12) =  0  // travel downward/counterclockwise\n//   useNearestModulo(6, 0, 12) =  0  // tie resolved downward\n//   useNearestModulo(7, 0, 12) = 12  // travel upward/clockwise\n//   useNearestModulo(7, 1, 12) = 1\n//   useNearestModulo(7,-1, 12) = 11  // -1 % 12 = 11\nfunction getNearestModulo(current: number, target: number, m: number): number {\n  const q = current % m;\n  const pp = target % m;\n  return Math.round((q - pp) / m) * m + pp;\n}\n\nexport default function App(): JSX.Element {\n  const [stepsBetween, setStepsBetween] = React.useState<Scale>(scales[0]);\n  const [modOffset, setModOffset] = React.useState<number>(0);\n  const [modRoot, setModRoot] = React.useState<number>(0);\n  const [state, setState] = useState<State>({ loaded: false });\n  // const [mousedOver, setMouseOver] = useState<number | null>(null);\n  const [{ width, height }, setWindow] = React.useState<{\n    width: number;\n    height: number;\n  }>({ width: window.innerWidth, height: window.innerHeight });\n  const { springRoot, springOffset } = useSpring({\n    springRoot: modRoot,\n    springOffset: modOffset,\n    config: { tension: 40, friction: 40, mass: 10 },\n  });\n  const playing: boolean = state.loaded && state.notesToPlay.length > 0;\n\n  React.useEffect(() => {\n    const listener = () =>\n      setWindow({ width: window.innerWidth, height: window.innerHeight });\n    window.addEventListener(\"resize\", listener);\n    return () => window.removeEventListener(\"resize\", listener);\n  }, [setWindow]);\n\n  useEffect(() => {\n    setState({\n      loaded: true,\n      synth: new Synth().toDestination(),\n      notesToPlay: [],\n    });\n  }, [setState]);\n\n  useEffect(() => {\n    if (state.loaded) {\n      const [head, ...tail]: Scale = state.notesToPlay;\n      if (playing) {\n        let interval: number | null = null;\n        const note = notes[head % notes.length];\n        state.synth.triggerAttack(\n          `${note.sharp}${head < notes.length ? octave : octave + 1}`\n        );\n        // @ts-ignore\n        interval = setInterval(() => {\n          setState({ ...state, notesToPlay: tail });\n        }, 300);\n        return () => {\n          state.synth.triggerRelease();\n          if (interval) clearInterval(interval);\n        };\n      }\n    }\n  }, [state, playing]);\n\n  const root = modNotes(modRoot);\n  const offset = modNotes(modOffset);\n  const setRootNearestModule = (newRoot: number) =>\n    setModRoot(getNearestModulo(root, newRoot, notes.length));\n  const setOffsetNearestModule = (newOffset: number) =>\n    setModOffset(getNearestModulo(offset, newOffset, notes.length));\n  const octave: number = 3;\n  const containerSize = Math.min(width - 30, height - 30);\n  const fontSize = `${containerSize / 50}pt`;\n  const arcSize = (2 * Math.PI) / notes.length;\n  const fontStyle = { \"--f\": fontSize } as any;\n  const setRandomRoot = () => {\n    setRootNearestModule(randomNumber(notes.length));\n    setOffsetNearestModule(0);\n  };\n  let setRandomScale = () => {\n    const newScale = scales[randomNumber(scales.length)];\n    setStepsBetween(rotate(newScale, randomNumber(newScale.length)));\n  };\n  const setNotesToPlay = () => {\n    if (state.loaded)\n      setState({\n        ...state,\n        notesToPlay: playing ? [] : absIndices,\n      });\n  };\n\n  const absIndices: Scale = stepsBetween.reduce(\n    (soFar: Scale, n: number) => soFar.concat(soFar[soFar.length - 1] + n),\n    [root]\n  );\n  const modIndices = absIndices.map((i) => i % notes.length);\n  const included = notes.map((_, i) => {\n    return modIndices.includes(i);\n  });\n  const colors = included.map((inc, i) => {\n    if (\n      state.loaded &&\n      state.notesToPlay.length > 0 &&\n      modNotes(state.notesToPlay[0]) == i\n    )\n      return playingColor;\n    if (inc) return highlightColor;\n    return lowLightColor;\n  });\n  const arcGen = d3\n    .arc<number>()\n    .padAngle(0.02)\n    .innerRadius(containerSize / 2.5)\n    .outerRadius(containerSize / 2)\n    .startAngle((i: number) => (i - 0.5) * arcSize)\n    .endAngle((i: number) => (i + 0.5) * arcSize)\n    .cornerRadius(containerSize);\n  const arcs = notes.map((_, i) => arcGen(i) as string);\n  const arcInfo: [[number, boolean, string], string][] = zip(\n    rotate(\n      zip(included, colors).map(([...x], i) => [i, ...x]),\n      root - offset\n    ),\n    arcs\n  );\n\n  const noteNames = notes.map((note: Note) =>\n    note.sharp == note.flat\n      ? note.sharp\n      : `${note.sharp}/${note.flat}`\n          .replace(/(\\w)#/, \"$1♯\")\n          .replace(/(\\w)b/, \"$1♭\")\n  );\n  const noteNamesInfo = rotate(zip(noteNames, colors), root);\n\n  return (\n    <div\n      className={\"container\"}\n      style={{ \"--s\": `${containerSize}px`, \"--m\": notes.length } as any}\n    >\n      <div className={\"buttons\"}>\n        <button style={fontStyle} onClick={setRandomRoot}>\n          Randomize Root\n        </button>\n        <button style={fontStyle} onClick={setRandomScale}>\n          Randomize Scale\n        </button>\n        <button style={fontStyle} onClick={setNotesToPlay}>\n          {playing ? \"Pause\" : \"Play\"}\n        </button>\n      </div>\n      <div className={\"necklace\"}>\n        {arcInfo.map(([[absIndex, included, color], d], i: number) => {\n          return (\n            <animated.svg\n              className={\"svg\"}\n              key={i}\n              style={\n                {\n                  \"--c\": color,\n                  \"--r\": springOffset.interpolate((r: number) => -r),\n                } as any\n              }\n            >\n              <path\n                className={\"path\"}\n                stroke={color}\n                d={d}\n                onClick={(e: React.MouseEvent<SVGPathElement>) => {\n                  let newOffset = modNotes(offset + (absIndex - root));\n                  if (e.shiftKey) {\n                    if (included) {\n                      setOffsetNearestModule(newOffset);\n                      setStepsBetween(\n                        rotate(stepsBetween, modIndices.indexOf(absIndex))\n                      );\n                    }\n                  } else {\n                    setRootNearestModule(absIndex);\n                    setOffsetNearestModule(offset + (absIndex - root));\n                  }\n                }}\n              />\n            </animated.svg>\n          );\n        })}\n        <div className={\"note-names\"}>\n          {noteNamesInfo.map(([name, color], i) => (\n            <animated.a\n              style={\n                {\n                  \"--i\": springRoot.interpolate((r) => i + (root - r)),\n                  \"--c\": color,\n                  ...fontStyle,\n                } as any\n              }\n              key={i}\n            >\n              {name}\n            </animated.a>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}