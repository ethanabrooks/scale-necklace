{"version":3,"sources":["notes.ts","scales.ts","util.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["notes","sharp","flat","NUM_NOTES","length","AScales","len","flatten","BScales","map","b","head","tail","a","tag","scale","CScales","c","getStepsA","concat","getStepsB","getStepsC","hasDoubleHalfSteps","zip","slice","some","hasAug2nd","s","getPatterns","highlightColor","getComputedStyle","document","documentElement","getPropertyValue","lowLightColor","playingColor","randomNumber","n","Math","floor","random","rotate","array","start","modStart","mod","modNotes","useNearestModulo","pp","m","q","React","useRef","current","qq","round","App","patterns","useMemo","useState","offset","setOffset","root","setRoot","moveRoot","setMoveRoot","filter","doubleHalfStepsProb","set2HalfStepsProb","aug2ndProb","setAug2ndProb","randomSteps","patternSubset","stepsBetween","setStepsBetween","loaded","state","setState","width","window","innerWidth","height","innerHeight","setWindow","targetRoot","targetOffset","useSpring","springRoot","springOffset","config","tension","friction","mass","playing","notesToPlay","useEffect","resizeListener","addEventListener","removeEventListener","keyDownListener","key","keyUpListener","synth","Synth","toDestination","interval","note","triggerAttack","octave","setInterval","triggerRelease","clearInterval","containerSize","min","arcSize","PI","arcGen","d3","padAngle","innerRadius","outerRadius","startAngle","i","endAngle","cornerRadius","arcs","_","fontStyle","setNotesToPlay","then","absIndices","reduce","soFar","modIndices","included","includes","colors","inc","arcInfo","x","noteNames","replace","noteNamesInfo","className","style","zIndex","onClick","aria-pressed","Typography","color","Switch","checked","onChange","target","size","inputProps","role","Slider","value","newValue","div","interpolate","r","absIndex","d","stroke","aria-labelledby","tabIndex","newOffset","indexOf","name","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.72284530.chunk.js","sourcesContent":["export type Note = { sharp: string; flat: string };\nexport const notes: Note[] = [\n  { sharp: \"c\", flat: \"c\" },\n  { sharp: \"c#\", flat: \"db\" },\n  { sharp: \"d\", flat: \"d\" },\n  { sharp: \"d#\", flat: \"eb\" },\n  { sharp: \"e\", flat: \"e\" },\n  { sharp: \"f\", flat: \"f\" },\n  { sharp: \"f#\", flat: \"gb\" },\n  { sharp: \"g\", flat: \"g\" },\n  { sharp: \"g#\", flat: \"ab\" },\n  { sharp: \"a\", flat: \"a\" },\n  { sharp: \"a#\", flat: \"bb\" },\n  { sharp: \"b\", flat: \"b\" },\n];\nexport const NUM_NOTES = notes.length;\n","import { flatten, zip } from \"fp-ts/lib/Array\";\nimport { NUM_NOTES } from \"./notes\";\nimport { Steps } from \"./util\";\n\ntype AScale = { head: [1]; tail: B } | { head: [1, 1]; tail: B };\ntype BScale =\n  | { head: [2]; tail: C }\n  | { head: [2, 3]; tail: C }\n  | { head: [3]; tail: A };\ntype CScale = A | B | null;\n\ntype A = { tag: \"A\"; scale: AScale };\ntype B = { tag: \"B\"; scale: BScale };\ntype C = { tag: \"C\"; scale: CScale };\n\nfunction AScales(len: number): A[] {\n  if (len <= 1) {\n    return [];\n  }\n  return flatten<AScale>([\n    BScales(len - 1).map((b: B) => ({ head: [1], tail: b })),\n    BScales(len - 2).map((b: B) => ({ head: [1, 1], tail: b })),\n  ]).map((a: AScale) => ({ tag: \"A\", scale: a }));\n}\n\nfunction BScales(len: number): B[] {\n  if (len <= 0) {\n    return [];\n  }\n  return flatten<BScale>([\n    AScales(len - 3).map((a: A): BScale => ({ head: [3], tail: a })),\n    CScales(len - 2).map((c: C) => ({ head: [2], tail: c })),\n    CScales(len - 5).map((c: C) => ({ head: [2, 3], tail: c })),\n  ]).map((b: BScale) => ({ tag: \"B\", scale: b }));\n}\n\nfunction CScales(len: number): C[] {\n  if (len < 0) {\n    return [];\n  } else if (len === 0) {\n    return [{ tag: \"C\", scale: null }];\n  } else {\n    return flatten<A | B>([AScales(len), BScales(len)]).map((c: CScale) => ({\n      tag: \"C\",\n      scale: c,\n    }));\n  }\n}\n\nfunction getStepsA(a: A): Steps {\n  const head: Steps = a.scale.head;\n  if (a.scale.tail === null) {\n    return head;\n  }\n  return head.concat(getStepsB(a.scale.tail));\n}\n\nfunction getStepsB(b: B): Steps {\n  const head: Steps = b.scale.head;\n  switch (b.scale.tail.tag) {\n    case \"A\":\n      return head.concat(getStepsA(b.scale.tail));\n    case \"C\":\n      return head.concat(getStepsC(b.scale.tail));\n  }\n}\n\nfunction getStepsC(c: C): Steps {\n  if (c.scale === null) {\n    return [];\n  }\n  switch (c.scale.tag) {\n    case \"A\":\n      return getStepsA(c.scale);\n    case \"B\":\n      return getStepsB(c.scale);\n  }\n}\n\nexport function hasDoubleHalfSteps(scale: Steps): boolean {\n  return zip(scale, scale.slice(1)).some(([a, b]) => a === 1 && b === 1);\n}\n\nexport function hasAug2nd(scale: Steps): boolean {\n  return scale.some((s) => s === 3);\n}\n\nexport function getPatterns(): Steps[] {\n  return CScales(NUM_NOTES).map(getStepsC);\n}\n","import React from \"react\";\nimport { Synth } from \"tone\";\nimport { notes } from \"./notes\";\n\nexport const highlightColor = getComputedStyle(\n  document.documentElement\n).getPropertyValue(\"--hl\");\nexport const lowLightColor = getComputedStyle(\n  document.documentElement\n).getPropertyValue(\"--ll\");\nexport const playingColor = getComputedStyle(\n  document.documentElement\n).getPropertyValue(\"--pl\");\nexport type Steps = number[];\nexport type State =\n  | { loaded: false }\n  | {\n      loaded: true;\n      synth: Synth;\n      notesToPlay: Steps;\n    };\n\nexport function randomNumber(n: number): number {\n  return Math.floor(Math.random() * n);\n}\n\nexport function randomChoice<X>(array: X[]): X {\n  return array[randomNumber(array.length)];\n}\n\nexport function rotate<X>(array: X[], start: number) {\n  let modStart = mod(start, array.length);\n  return array.slice(modStart).concat(array.slice(0, modStart));\n}\n\nfunction mod(a: number, b: number) {\n  return ((a % b) + b) % b;\n}\n\nexport function modNotes(a: number) {\n  return mod(a, notes.length);\n}\n\n// useNearestModulo returns a value minimizing the distance traveled around a\n// circle. It always satisfies useNearestModulo(P, M) % M = P.\n//\n// useNearestModulo(P', M) = Q' such that Q' % M = P' but minimizing |Q' - Q|,\n// where Q is the return value from the previous call. The returned value Q' is\n// then used as the Q for the next call, and so forth.\n//\n// In the code below, P' is pp and Q' is qq.\n//\n// Example (sequence of calls):\n//   useNearestModulo( 0, 12) =  0\n//   useNearestModulo(10, 12) = -2\n//   useNearestModulo( 3, 12) =  3\n//   useNearestModulo( 7, 12) =  7\n//   useNearestModulo(10, 12) = 10\nexport function useNearestModulo(pp: number, m: number): number {\n  const q = React.useRef<number | null>(null);\n\n  // If the function hasn't been called yet, just return P' which satisfies\n  // P' % M = P', but record it as Q for the next call.\n  if (q.current == null) {\n    q.current = pp;\n    return pp;\n  }\n\n  // Calculate Q' that gets as close to Q as possible while satisfying\n  // Q' % M = P'.\n  const qq = Math.round((q.current - pp) / m) * m + pp;\n  q.current = qq;\n  return qq;\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./scales\";\nimport { getPatterns, hasAug2nd, hasDoubleHalfSteps } from \"./scales\";\nimport { Note, notes } from \"./notes\";\nimport { start, Synth } from \"tone\";\nimport * as d3 from \"d3\";\nimport \"./styles.scss\";\nimport { animated, useSpring } from \"react-spring\";\nimport { zip } from \"fp-ts/Array\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Slider from \"@material-ui/core/Slider\";\nimport {\n  highlightColor,\n  lowLightColor,\n  modNotes,\n  playingColor,\n  randomChoice,\n  randomNumber,\n  rotate,\n  State,\n  Steps,\n  useNearestModulo,\n} from \"./util\";\nimport { Typography } from \"@material-ui/core\";\n\nexport default function App(): JSX.Element {\n  const patterns: Steps[] = React.useMemo(getPatterns, [getPatterns]);\n  const [offset, setOffset] = React.useState<number>(0);\n  const [root, setRoot] = React.useState<number>(0);\n  const [moveRoot, setMoveRoot] = React.useState<boolean>(true);\n  const [doubleHalfStepsProb, set2HalfStepsProb] = React.useState<number>(\n    (100 * patterns.filter(hasDoubleHalfSteps).length) / patterns.length\n  );\n  const [aug2ndProb, setAug2ndProb] = React.useState<number>(\n    (100 * patterns.filter(hasAug2nd).length) / patterns.length\n  );\n\n  const randomSteps = () => {\n    const patternSubset = patterns\n      .filter(\n        Math.random() < aug2ndProb ? hasAug2nd : (s: Steps) => !hasAug2nd(s)\n      )\n      .filter(\n        Math.random() < doubleHalfStepsProb\n          ? hasDoubleHalfSteps\n          : (s: Steps) => !hasDoubleHalfSteps(s)\n      );\n    return randomChoice(patternSubset);\n  };\n  const [stepsBetween, setStepsBetween] = React.useState<Steps>(randomSteps());\n  const [state, setState] = useState<State>({ loaded: false });\n  const [{ width, height }, setWindow] = React.useState<{\n    width: number;\n    height: number;\n  }>({ width: window.innerWidth, height: window.innerHeight });\n  const targetRoot = useNearestModulo(root, notes.length);\n  const targetOffset = useNearestModulo(offset, notes.length);\n  const { springRoot, springOffset } = useSpring({\n    springRoot: targetRoot,\n    springOffset: targetOffset,\n    config: { tension: 200, friction: 120, mass: 10 },\n  });\n  const playing: boolean = state.loaded && state.notesToPlay.length > 0;\n\n  React.useEffect(() => {\n    const resizeListener = () =>\n      setWindow({ width: window.innerWidth, height: window.innerHeight });\n    window.addEventListener(\"resize\", resizeListener);\n    return () => {\n      window.removeEventListener(\"resize\", resizeListener);\n    };\n  }, [setWindow]);\n\n  React.useEffect(() => {\n    const keyDownListener = ({ key }: { key: string }) => {\n      if (key === \"Shift\") setMoveRoot(false);\n      if (key === \"Enter\") {\n        setMoveRoot(!moveRoot);\n      }\n    };\n    const keyUpListener = ({ key }: { key: string }) => {\n      if (key === \"Shift\") setMoveRoot(true);\n    };\n    window.addEventListener(\"keydown\", keyDownListener);\n    window.addEventListener(\"keyup\", keyUpListener);\n    return () => {\n      window.removeEventListener(\"keydown\", keyDownListener);\n      window.removeEventListener(\"keyup\", keyUpListener);\n    };\n  }, [moveRoot, setMoveRoot]);\n\n  useEffect(() => {\n    setState({\n      loaded: true,\n      synth: new Synth().toDestination(),\n      notesToPlay: [],\n    });\n  }, [setState]);\n\n  useEffect(() => {\n    if (state.loaded) {\n      const [head, ...tail]: Steps = state.notesToPlay;\n      if (playing) {\n        let interval: number | null = null;\n        const note = notes[head % notes.length];\n        state.synth.triggerAttack(\n          `${note.sharp}${head < notes.length ? octave : octave + 1}`\n        );\n        // @ts-ignore\n        interval = setInterval(() => {\n          setState({ ...state, notesToPlay: tail });\n        }, 300);\n        return () => {\n          state.synth.triggerRelease();\n          if (interval) clearInterval(interval);\n        };\n      }\n    }\n  }, [state, playing]);\n\n  const containerSize = Math.min(width - 30, height - 30);\n  const arcSize = (2 * Math.PI) / notes.length;\n  const arcGen = d3\n    .arc<number>()\n    .padAngle(0.1)\n    .innerRadius(containerSize / 2.9)\n    .outerRadius(containerSize / 2)\n    .startAngle((i: number) => (i - 0.5) * arcSize)\n    .endAngle((i: number) => (i + 0.5) * arcSize)\n    .cornerRadius(containerSize);\n  const arcs = React.useMemo(() => notes.map((_, i) => arcGen(i) as string), [\n    notes,\n    arcGen,\n    arcSize,\n  ]);\n  const octave: number = 3;\n  const fontSize = `${containerSize / 50}pt`;\n  const fontStyle = { \"--f\": fontSize } as any;\n  const setRandomRoot = () => {\n    setRoot(randomNumber(notes.length));\n    setOffset(0);\n    setNotesToPlay([]);\n  };\n  const setNotesToPlay = (notes: Steps) => {\n    if (state.loaded) {\n      if (playing) {\n        setState({ ...state, notesToPlay: [] });\n      } else {\n        start().then(() => setState({ ...state, notesToPlay: notes }));\n      }\n    }\n  };\n\n  const absIndices: Steps = stepsBetween.reduce(\n    (soFar: Steps, n: number) => soFar.concat(soFar[soFar.length - 1] + n),\n    [root]\n  );\n  const modIndices = absIndices.map((i) => i % notes.length);\n  const included = notes.map((_, i) => modIndices.includes(i));\n  const colors = included.map((inc, i) => {\n    if (\n      state.loaded &&\n      state.notesToPlay.length > 0 &&\n      modNotes(state.notesToPlay[0]) === i\n    )\n      return playingColor;\n    if (inc) return highlightColor;\n    return lowLightColor;\n  });\n  const arcInfo: [[number, boolean, string], string][] = zip(\n    rotate(\n      zip(included, colors).map(([...x], i) => [i, ...x]),\n      root - offset\n    ),\n    arcs\n  );\n\n  const noteNames = notes.map((note: Note) =>\n    note.sharp === note.flat\n      ? note.sharp\n      : `${note.sharp}/${note.flat}`\n          .replace(/(\\w)#/, \"$1♯\")\n          .replace(/(\\w)b/, \"$1♭\")\n  );\n  const noteNamesInfo = rotate(zip(noteNames, colors), root);\n\n  return (\n    <div\n      className={\"container\"}\n      style={{ \"--s\": `${containerSize}px`, \"--m\": notes.length } as any}\n    >\n      <div className={\"buttons\"}>\n        <div style={{ zIndex: 1000 } as any}>\n          <button style={fontStyle} onClick={setRandomRoot}>\n            Randomize Root\n          </button>\n          <button\n            style={fontStyle}\n            onClick={() => setStepsBetween(randomSteps)}\n          >\n            Randomize Scale\n          </button>\n          <button\n            style={fontStyle}\n            onClick={() => setNotesToPlay(absIndices)}\n            aria-pressed={playing}\n          >\n            {playing ? \"Pause\" : \"Play\"}\n          </button>\n          <Typography style={{ ...fontStyle, color: \"#999999\" } as any}>\n            Click on a note or shift-click on a yellow note.\n          </Typography>\n          <Switch\n            checked={!moveRoot}\n            onChange={({ target }) => setMoveRoot(!target.checked)}\n            color={\"default\"}\n            size={\"medium\"}\n            inputProps={{\n              \"aria-label\": \"toggle movement mode\",\n              role: \"switch\",\n            }}\n          />\n          <Typography>Probability of consecutive half-steps</Typography>\n          <Slider\n            value={doubleHalfStepsProb}\n            onChange={(_, newValue) => set2HalfStepsProb(newValue as number)}\n          />\n          <Typography>Probability of augmented 2nd</Typography>\n          <Slider\n            value={aug2ndProb}\n            onChange={(_, newValue) => setAug2ndProb(newValue as number)}\n          />\n        </div>\n      </div>\n      <animated.div\n        className={\"necklace\"}\n        style={{ \"--r\": springOffset.interpolate((r: number) => -r) } as any}\n      >\n        {arcInfo.map(([[absIndex, included, color], d], i: number) => (\n          <svg className={\"svg\"} key={i} style={{ \"--c\": color } as any}>\n            <path\n              className={\"path\"}\n              stroke={color}\n              d={d}\n              aria-labelledby={`note${absIndex}`}\n              role={\"button\"}\n              tabIndex={0}\n              onClick={() => {\n                let newOffset = modNotes(offset + (absIndex - root));\n                setNotesToPlay([]);\n                if (moveRoot) {\n                  setRoot(absIndex);\n                } else if (included) {\n                  setOffset(newOffset);\n                  setStepsBetween(\n                    rotate(stepsBetween, modIndices.indexOf(absIndex))\n                  );\n                }\n              }}\n            />\n          </svg>\n        ))}\n        <animated.div\n          className={\"note-names\"}\n          style={{ \"--a\": springRoot.interpolate((r) => root - r) } as any}\n        >\n          {noteNamesInfo.map(([name, color], i) => (\n            <span\n              style={{ \"--i\": i, \"--c\": color, ...fontStyle } as any}\n              id={`note${root + i}`}\n              key={i}\n            >\n              {name}\n            </span>\n          ))}\n        </animated.div>\n      </animated.div>\n    </div>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}