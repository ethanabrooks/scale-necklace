{"version":3,"sources":["notes.ts","util.tsx","scales.ts","components.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["notes","sharp","flat","NUM_NOTES","length","highlightColor","foregroundColor","playingColor","randomNumber","n","Math","floor","random","randomChoice","array","rotate","start","modStart","mod","slice","concat","a","b","modNotes","useNearestModulo","pp","m","q","React","useRef","current","qq","round","randomSteps","patterns","aug2ndProb","doubleHalfStepsProb","patternSubset","aug2ndPatterns","filter","hasAug2nd","noAug2ndPatterns","s","alert","doubleHalfStepPatterns","hasDoubleHalfSteps","noDoubleHalfStepPatterns","prob","predicate","AScales","len","flatten","BScales","map","head","tail","tag","scale","CScales","c","getStepsA","getStepsB","getStepsC","zip","some","arrayEqual","every","isAdjacentHelper","check1","check2","rotated1","rotated2","h1","t1","h2","t2","assert","isAdjacent","r11","r12","r1","r21","r22","r2","scale1","scale2","p","_","i","Slider","value","setValue","type","className","min","max","step","onChange","target","Switch","checked","App","useState","offset","setOffset","root","steps","scaleHistory","setScaleHistory","scaleChoice","setScaleChoice","setScale","moveRoot","setMoveRoot","setDoubleHalfStepsProb","setAug2ndProb","width","window","innerWidth","height","innerHeight","setWindow","synth","useMemo","Synth","targetRoot","targetOffset","useSpring","springRoot","springOffset","config","tension","friction","mass","useReducer","state","action","loaded","notesToPlay","Error","dispatch","playing","useEffect","interval","note","triggerAttack","octave","setInterval","triggerRelease","clearInterval","toDestination","resizeListener","addEventListener","removeEventListener","keyDownListener","key","keyUpListener","containerSize","arcSize","PI","arcGen","d3","padAngle","innerRadius","outerRadius","startAngle","endAngle","cornerRadius","arcs","setNotesToPlay","then","steps1","absIndices","reduce","soFar","cumSum","modIndices","included","includes","colors","inc","arcInfo","x","noteNames","replace","noteNamesInfo","style","onClick","disabled","adjacent","adjacentTo","console","log","aria-pressed","div","interpolate","r","absIndex","color","d","stroke","aria-labelledby","role","tabIndex","newOffset","indexOf","name","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.540c6eab.chunk.js","sourcesContent":["export type Note = { sharp: string; flat: string };\nexport const notes: Note[] = [\n  { sharp: \"c\", flat: \"c\" },\n  { sharp: \"c#\", flat: \"db\" },\n  { sharp: \"d\", flat: \"d\" },\n  { sharp: \"d#\", flat: \"eb\" },\n  { sharp: \"e\", flat: \"e\" },\n  { sharp: \"f\", flat: \"f\" },\n  { sharp: \"f#\", flat: \"gb\" },\n  { sharp: \"g\", flat: \"g\" },\n  { sharp: \"g#\", flat: \"ab\" },\n  { sharp: \"a\", flat: \"a\" },\n  { sharp: \"a#\", flat: \"bb\" },\n  { sharp: \"b\", flat: \"b\" },\n];\nexport const NUM_NOTES = notes.length;\n","import React from \"react\";\nimport { notes } from \"./notes\";\nimport { hasAug2nd, hasDoubleHalfSteps, patterns } from \"./scales\";\n\nexport const backgroundColor = \"#222222\";\nexport const highlightColor = \"#fca311\";\nexport const foregroundColor = \"#e5e5e5\";\nexport const lowlightColor = \"#999999\";\nexport const playingColor = \"#ff4136\";\nexport type Steps = number[];\nexport type Indices = number[];\nexport type State = { loaded: false } | { loaded: true; notesToPlay: Steps };\nexport type Action =\n  | { type: \"reset\" }\n  | { type: \"nextNote\" }\n  | { type: \"play\"; notes: Indices };\nexport function randomNumber(n: number): number {\n  return Math.floor(Math.random() * n);\n}\n\nexport function randomChoice<X>(array: X[]): X {\n  return array[randomNumber(array.length)];\n}\n\nexport function rotate<X>(array: X[], start: number) {\n  let modStart = mod(start, array.length);\n  return array.slice(modStart).concat(array.slice(0, modStart));\n}\n\nfunction mod(a: number, b: number) {\n  return ((a % b) + b) % b;\n}\n\nexport function modNotes(a: number) {\n  return mod(a, notes.length);\n}\n\nexport function cumSum(array: number[], start = 0) {\n  return array.reduce(\n    (soFar: Indices, n: number) => soFar.concat(soFar[soFar.length - 1] + n),\n    [start]\n  );\n}\n// useNearestModulo returns a value minimizing the distance traveled around a\n// circle. It always satisfies useNearestModulo(P, M) % M = P.\n//\n// useNearestModulo(P', M) = Q' such that Q' % M = P' but minimizing |Q' - Q|,\n// where Q is the return value from the previous call. The returned value Q' is\n// then used as the Q for the next call, and so forth.\n//\n// In the code below, P' is pp and Q' is qq.\n//\n// Example (sequence of calls):\n//   useNearestModulo( 0, 12) =  0\n//   useNearestModulo(10, 12) = -2\n//   useNearestModulo( 3, 12) =  3\n//   useNearestModulo( 7, 12) =  7\n//   useNearestModulo(10, 12) = 10\nexport function useNearestModulo(pp: number, m: number): number {\n  const q = React.useRef<number | null>(null);\n\n  // If the function hasn't been called yet, just return P' which satisfies\n  // P' % M = P', but record it as Q for the next call.\n  if (q.current == null) {\n    q.current = pp;\n    return pp;\n  }\n\n  // Calculate Q' that gets as close to Q as possible while satisfying\n  // Q' % M = P'.\n  const qq = Math.round((q.current - pp) / m) * m + pp;\n  q.current = qq;\n  return qq;\n}\n\nexport const randomSteps = (\n  patterns: Steps[],\n  aug2ndProb: number,\n  doubleHalfStepsProb: number\n): Steps | null => {\n  const aug2ndPatterns = patterns.filter(hasAug2nd);\n  const noAug2ndPatterns = patterns.filter((s) => !hasAug2nd(s));\n  let patternSubset: Steps[];\n  const useAug2nd =\n    (100 * Math.random() < aug2ndProb || noAug2ndPatterns.length === 0) &&\n    aug2ndPatterns.length > 0;\n  if (useAug2nd) {\n    if (aug2ndProb === 0) {\n      alert(\"No adjacent scale without augmented seconds.\");\n    }\n    patternSubset = aug2ndPatterns;\n  } else if (noAug2ndPatterns.length > 0) {\n    patternSubset = noAug2ndPatterns;\n  } else {\n    return null;\n  }\n  const doubleHalfStepPatterns = patternSubset.filter(hasDoubleHalfSteps);\n  const noDoubleHalfStepPatterns = patternSubset.filter(\n    (s) => !hasDoubleHalfSteps(s)\n  );\n  if (\n    (100 * Math.random() < doubleHalfStepsProb ||\n      noDoubleHalfStepPatterns.length === 0) &&\n    doubleHalfStepPatterns.length > 0\n  ) {\n    if (doubleHalfStepsProb === 0) {\n      alert(\"No adjacent scale without double half steps.\");\n    }\n    return randomChoice(doubleHalfStepPatterns);\n  } else if (noDoubleHalfStepPatterns.length > 0) {\n    return randomChoice(noDoubleHalfStepPatterns);\n  } else {\n    return null;\n  }\n};\n\nexport function prob(predicate: (scale: Steps) => boolean) {\n  return (100 * patterns.filter(predicate).length) / patterns.length;\n}\n","import { flatten, zip } from \"fp-ts/lib/Array\";\nimport { NUM_NOTES } from \"./notes\";\nimport { rotate, Steps } from \"./util\";\nimport assert from \"assert\";\n\ntype AScale = { head: [1]; tail: B } | { head: [1, 1]; tail: B };\ntype BScale =\n  | { head: [2]; tail: C }\n  | { head: [2, 3]; tail: C }\n  | { head: [3]; tail: A };\ntype CScale = A | B | null;\n\ntype A = { tag: \"A\"; scale: AScale };\ntype B = { tag: \"B\"; scale: BScale };\ntype C = { tag: \"C\"; scale: CScale };\n\nfunction AScales(len: number): A[] {\n  if (len <= 1) {\n    return [];\n  }\n  return flatten<AScale>([\n    BScales(len - 1).map((b: B) => ({ head: [1], tail: b })),\n    BScales(len - 2).map((b: B) => ({ head: [1, 1], tail: b })),\n  ]).map((a: AScale) => ({ tag: \"A\", scale: a }));\n}\n\nfunction BScales(len: number): B[] {\n  if (len <= 0) {\n    return [];\n  }\n  return flatten<BScale>([\n    AScales(len - 3).map((a: A): BScale => ({ head: [3], tail: a })),\n    CScales(len - 2).map((c: C) => ({ head: [2], tail: c })),\n    CScales(len - 5).map((c: C) => ({ head: [2, 3], tail: c })),\n  ]).map((b: BScale) => ({ tag: \"B\", scale: b }));\n}\n\nfunction CScales(len: number): C[] {\n  if (len < 0) {\n    return [];\n  } else if (len === 0) {\n    return [{ tag: \"C\", scale: null }];\n  } else {\n    return flatten<A | B>([AScales(len), BScales(len)]).map((c: CScale) => ({\n      tag: \"C\",\n      scale: c,\n    }));\n  }\n}\n\nfunction getStepsA(a: A): Steps {\n  const head: Steps = a.scale.head;\n  if (a.scale.tail === null) {\n    return head;\n  }\n  return head.concat(getStepsB(a.scale.tail));\n}\n\nfunction getStepsB(b: B): Steps {\n  const head: Steps = b.scale.head;\n  switch (b.scale.tail.tag) {\n    case \"A\":\n      return head.concat(getStepsA(b.scale.tail));\n    case \"C\":\n      return head.concat(getStepsC(b.scale.tail));\n  }\n}\n\nfunction getStepsC(c: C): Steps {\n  if (c.scale === null) {\n    return [];\n  }\n  switch (c.scale.tag) {\n    case \"A\":\n      return getStepsA(c.scale);\n    case \"B\":\n      return getStepsB(c.scale);\n  }\n}\n\nexport function hasDoubleHalfSteps(scale: Steps): boolean {\n  return zip(scale, rotate(scale, 1)).some(([a, b]) => a === 1 && b === 1);\n}\n\nexport function hasAug2nd(scale: Steps): boolean {\n  return scale.some((s) => s === 3);\n}\n\nfunction arrayEqual<X>(a: X[], b: X[]): boolean {\n  return zip(a, b).every(([a, b]) => a === b);\n}\n\nfunction isAdjacentHelper(\n  check1: Steps,\n  check2: Steps,\n  rotated1: Steps,\n  rotated2: Steps\n): boolean {\n  if (check1.length === 0 || check2.length === 0) return false; // no steps in common\n  const [h1, ...t1] = check1;\n  const [h2, ...t2] = check2;\n  assert(h1 === rotated1[rotated1.length - 1]);\n  assert(h2 === rotated2[rotated2.length - 1]);\n  if (h1 === h2) {\n    const [r11, r12, ...r1] = rotated1;\n    const [r21, r22, ...r2] = rotated2;\n    let isAdjacent;\n\n    if (r11 !== r12 && r11 + r12 === r21 + r22) isAdjacent = arrayEqual(r1, r2); // sharpened/flattened\n    if (r11 + r12 === r21) {\n      isAdjacent = arrayEqual(r1, [r22].concat(r2));\n    } // split\n    if (r21 + r22 === r11) isAdjacent = arrayEqual(r2, [r12].concat(r1)); // merge\n    if (isAdjacent) return true;\n  }\n  return isAdjacentHelper(t1, t2, rotate(rotated1, 1), rotate(rotated2, 1));\n}\n\nfunction isAdjacent(scale1: Steps, scale2: Steps) {\n  return isAdjacentHelper(scale1, scale2, rotate(scale1, 1), rotate(scale2, 1));\n}\n\nexport const patterns: Steps[] = flatten(\n  CScales(NUM_NOTES)\n    .map(getStepsC)\n    .map((p) => p.map((_, i) => rotate(p, i)))\n);\n\nexport function adjacentTo(scale: Steps): Steps[] {\n  return patterns.filter((scale2) => isAdjacent(scale, scale2));\n}\n\n// function dbg(scale1: Steps, scale2: Steps) {\n//   const rotated1 = rotate(scale1, 1);\n//   const rotated2 = rotate(scale2, 1);\n//   console.log(\n//     scale1,\n//     scale2,\n//     rotated1,\n//     rotated2,\n//     isAdjacentHelper(scale1, scale2, rotated1, rotated2)\n//   );\n//   // console.log(\n//   //   scale2,\n//   //   scale1,\n//   //   rotated2,\n//   //   rotated1,\n//   //   isAdjacentHelper(scale2, scale1, rotated2, rotated1)\n//   // );\n// }\n\n// dbg([1, 3, 1, 1, 2, 3, 1], [1, 3, 1, 1, 2, 2, 2]);\n","import React, { Dispatch, SetStateAction } from \"react\";\n\nexport const Slider: React.FC<{\n  value: number;\n  setValue: Dispatch<SetStateAction<number>>;\n}> = ({ value, setValue }) => {\n  return (\n    <input\n      type=\"range\"\n      className={\"slider\"}\n      min={0}\n      max={100}\n      step={10}\n      value={value}\n      onChange={({ target }) => {\n        setValue(+target.value);\n      }}\n    />\n  );\n};\nexport const Switch: React.FC<{\n  value: boolean;\n  setValue: Dispatch<SetStateAction<boolean>>;\n}> = ({ value, setValue }) => (\n  <label className=\"switch\">\n    <input type=\"checkbox\" onChange={() => setValue(!value)} checked={!value} />\n    <span className=\"slide\" />\n  </label>\n);\n","import React from \"react\";\nimport \"./scales\";\nimport { adjacentTo, hasAug2nd, hasDoubleHalfSteps, patterns } from \"./scales\";\nimport { Note, notes } from \"./notes\";\nimport { start, Synth } from \"tone\";\nimport * as d3 from \"d3\";\nimport \"./styles.scss\";\nimport { animated, useSpring } from \"react-spring\";\nimport { zip } from \"fp-ts/Array\";\nimport {\n  Action,\n  backgroundColor,\n  cumSum,\n  foregroundColor,\n  highlightColor,\n  Indices,\n  lowlightColor,\n  modNotes,\n  playingColor,\n  prob,\n  randomNumber,\n  randomSteps,\n  rotate,\n  State,\n  Steps,\n  useNearestModulo,\n} from \"./util\";\nimport { Slider, Switch } from \"./components\";\n\ntype Scale = { root: number; steps: Steps };\n\nexport default function App(): JSX.Element {\n  const [offset, setOffset]: [\n    number,\n    React.Dispatch<React.SetStateAction<number>>\n  ] = React.useState<number>(0);\n  const [scaleHistory, setScaleHistory] = React.useState<Scale[]>([\n    {\n      root: 0,\n      steps: patterns[0],\n    },\n  ]);\n  const [scaleChoice, setScaleChoice] = React.useState<number>(0);\n  const scale = scaleHistory[scaleChoice];\n  const root = scale.root;\n  function setScale(scale: Scale) {\n    setScaleChoice(scaleHistory.length);\n    setScaleHistory(scaleHistory.concat(scale));\n  }\n  const [moveRoot, setMoveRoot] = React.useState<boolean>(true);\n  const [doubleHalfStepsProb, setDoubleHalfStepsProb] = React.useState<number>(\n    prob(hasDoubleHalfSteps)\n  );\n  const [aug2ndProb, setAug2ndProb] = React.useState<number>(prob(hasAug2nd));\n  // const [stepsBetween, setStepsBetween] = React.useState<Steps>(\n  //   randomSteps(patterns, aug2ndProb, doubleHalfStepsProb) as Steps\n  // );\n  const [{ width, height }, setWindow] = React.useState<{\n    width: number;\n    height: number;\n  }>({ width: window.innerWidth, height: window.innerHeight });\n  const synth = React.useMemo(() => new Synth(), []);\n  const targetRoot = useNearestModulo(root, notes.length);\n  const targetOffset = useNearestModulo(offset, notes.length);\n  const { springRoot, springOffset } = useSpring({\n    springRoot: targetRoot,\n    springOffset: targetOffset,\n    config: { tension: 200, friction: 120, mass: 10 },\n  });\n\n  const [state, dispatch] = React.useReducer(\n    (state: State, action: Action): State => {\n      if (state.loaded) {\n        if (action.type === \"play\") {\n          return { ...state, notesToPlay: action.notes };\n        } else if (action.type === \"nextNote\") {\n          const [, ...notesToPlay] = state.notesToPlay;\n          return { ...state, notesToPlay };\n        } else if (action.type === \"reset\") {\n          return { ...state, notesToPlay: [] };\n        } else {\n          throw new Error(\"Invalid action.type\");\n        }\n      }\n      return { loaded: true, notesToPlay: [] };\n    },\n    {\n      loaded: false,\n    }\n  );\n\n  const playing: boolean = state.loaded && state.notesToPlay.length > 0;\n  const octave: number = 3;\n\n  React.useEffect(() => {\n    if (state.loaded) {\n      if (playing) {\n        const [head]: Indices = state.notesToPlay;\n        let interval: number | null = null;\n        const note = notes[head % notes.length];\n        synth.triggerAttack(\n          `${note.sharp}${head < notes.length ? octave : octave + 1}`\n        );\n        // @ts-ignore\n        interval = setInterval(() => {\n          dispatch({ type: \"nextNote\" });\n        }, 500);\n        return () => {\n          synth.triggerRelease();\n          if (interval) clearInterval(interval);\n        };\n      }\n    } else {\n      synth.toDestination();\n      dispatch({ type: \"reset\" });\n    }\n  }, [state, synth, playing]);\n\n  React.useEffect(() => {\n    const resizeListener = () =>\n      setWindow({ width: window.innerWidth, height: window.innerHeight });\n    window.addEventListener(\"resize\", resizeListener);\n    return () => {\n      window.removeEventListener(\"resize\", resizeListener);\n    };\n  }, []);\n\n  React.useEffect(() => {\n    const keyDownListener = ({ key }: { key: string }) => {\n      if (key === \"Shift\") setMoveRoot(false);\n      if (key === \"Enter\") {\n        setMoveRoot((m) => !m);\n      }\n    };\n    const keyUpListener = ({ key }: { key: string }) => {\n      if (key === \"Shift\") setMoveRoot(true);\n    };\n    window.addEventListener(\"keydown\", keyDownListener);\n    window.addEventListener(\"keyup\", keyUpListener);\n    return () => {\n      window.removeEventListener(\"keydown\", keyDownListener);\n      window.removeEventListener(\"keyup\", keyUpListener);\n    };\n  }, [setMoveRoot]);\n\n  const containerSize = Math.min(width - 30, height - 30);\n  const arcSize = (2 * Math.PI) / notes.length;\n  const arcGen = d3\n    .arc<number>()\n    .padAngle(0.1)\n    .innerRadius(containerSize / 2.9)\n    .outerRadius(containerSize / 2)\n    .startAngle((i: number) => (i - 0.5) * arcSize)\n    .endAngle((i: number) => (i + 0.5) * arcSize)\n    .cornerRadius(containerSize);\n  const arcs = notes.map((_, i) => arcGen(i) as string);\n  const setRandomRoot = () => {\n    const root = randomNumber(notes.length);\n    setScale({ ...scale, root });\n    setOffset(0);\n    setNotesToPlay([]);\n  };\n  const setNotesToPlay = (notes: Indices) => {\n    if (state.loaded) {\n      if (playing) {\n        dispatch({ type: \"reset\" });\n      } else {\n        start().then(() => dispatch({ type: \"play\", notes }));\n      }\n    }\n  };\n\n  const steps1 = scale.steps;\n  const absIndices: Indices = cumSum(steps1, root);\n  const modIndices = absIndices.map((i) => i % notes.length);\n  const included = notes.map((_, i) => modIndices.includes(i));\n  const colors = included.map((inc, i) => {\n    if (\n      state.loaded &&\n      state.notesToPlay.length > 0 &&\n      modNotes(state.notesToPlay[0]) === i\n    )\n      return playingColor;\n    if (inc) return highlightColor;\n    return foregroundColor;\n  });\n  const arcInfo: [[number, boolean, string], string][] = zip(\n    rotate(\n      zip(included, colors).map(([...x], i) => [i, ...x]),\n      root - offset\n    ),\n    arcs\n  );\n\n  const noteNames = notes.map((note: Note) =>\n    note.sharp === note.flat\n      ? note.sharp\n      : `${note.sharp}/${note.flat}`\n          .replace(/(\\w)#/, \"$1♯\")\n          .replace(/(\\w)b/, \"$1♭\")\n  );\n  const noteNamesInfo = rotate(zip(noteNames, colors), root);\n\n  const setRandomScale = () => {\n    const steps = randomSteps(patterns, aug2ndProb, doubleHalfStepsProb);\n    if (steps === null) {\n      alert(\"No valid scale.\");\n    } else {\n      setScale({ ...scale, steps });\n    }\n  };\n\n  const setRandomAdjacentScale = () => {\n    const adjacent = adjacentTo(steps1);\n    const steps = randomSteps(adjacent, aug2ndProb, doubleHalfStepsProb);\n    if (steps === null) {\n      alert(\"No adjacent scale possible.\");\n      console.log(steps1);\n    } else {\n      setScale({ ...scale, steps });\n    }\n  };\n  return (\n    <div\n      className={\"container\"}\n      style={\n        {\n          \"--s\": `${containerSize}px`,\n          \"--m\": notes.length,\n          \"--bg\": backgroundColor,\n          \"--fg\": foregroundColor,\n          \"--hl\": highlightColor,\n          \"--ll\": lowlightColor,\n          \"--pl\": playingColor,\n        } as any\n      }\n    >\n      <div className={\"buttons row absolute\"}>\n        <button\n          className={\"button\"}\n          onClick={() => setScaleChoice(scaleChoice - 1)}\n          disabled={scaleChoice === 0}\n        >\n          ⇦\n        </button>\n        <button\n          className={\"button\"}\n          onClick={() => setScaleChoice(scaleChoice + 1)}\n          disabled={scaleChoice === scaleHistory.length - 1}\n        >\n          ⇨\n        </button>\n      </div>\n      <div className={\"buttons column flex\"}>\n        <button className={\"button\"} onClick={setRandomRoot}>\n          Randomize Root\n        </button>\n        <button className={\"button\"} onClick={setRandomScale}>\n          Randomize Scale\n        </button>\n        <button className={\"button\"} onClick={setRandomAdjacentScale}>\n          Random adjacent Scale\n        </button>\n        <button\n          className={\"button\"}\n          onClick={() => setNotesToPlay(absIndices)}\n          aria-pressed={playing}\n        >\n          {playing ? \"Pause\" : \"Play\"}\n        </button>\n        <span className={\"static\"}>\n          Click on a note or shift-click on a yellow note.\n        </span>\n        <Switch value={moveRoot} setValue={setMoveRoot} />\n        <span className={\"static\"}>Probability of consecutive half-steps</span>\n        <Slider value={doubleHalfStepsProb} setValue={setDoubleHalfStepsProb} />\n        <span className={\"static\"}>Probability of augmented 2nd</span>\n        <Slider value={aug2ndProb} setValue={setAug2ndProb} />\n      </div>\n      <animated.div\n        className={\"necklace\"}\n        style={{ \"--r\": springOffset.interpolate((r: number) => -r) } as any}\n      >\n        {arcInfo.map(([[absIndex, included, color], d], i: number) => (\n          <svg className={\"svg\"} key={i} style={{ \"--c\": color } as any}>\n            <path\n              className={\"path\"}\n              stroke={color}\n              d={d}\n              aria-labelledby={`note${absIndex}`}\n              role={\"button\"}\n              tabIndex={0}\n              onClick={() => {\n                const newOffset = modNotes(offset + (absIndex - root));\n                // setNotesToPlay([]);\n                if (moveRoot) {\n                  setScale({ ...scale, root: absIndex });\n                } else if (included) {\n                  setOffset(newOffset);\n                  const steps = rotate(steps1, modIndices.indexOf(absIndex));\n                  setScale({ ...scale, steps });\n                }\n              }}\n            />\n          </svg>\n        ))}\n        <animated.div\n          className={\"note-names\"}\n          style={{ \"--a\": springRoot.interpolate((r) => root - r) } as any}\n        >\n          {noteNamesInfo.map(([name, color], i) => (\n            <span\n              style={{ \"--i\": i, \"--c\": color } as any}\n              id={`note${root + i}`}\n              key={i}\n            >\n              {name}\n            </span>\n          ))}\n        </animated.div>\n      </animated.div>\n    </div>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}