{"version":3,"sources":["notes.ts","scales.ts","util.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["notes","sharp","flat","AScales","len","flatten","BScales","map","b","head","tail","a","tag","scale","CScales","c","getStepsA","concat","getStepsB","getStepsC","hasDoubleHalfSteps","zip","slice","some","hasAug2nd","s","patterns","length","highlightColor","getComputedStyle","document","documentElement","getPropertyValue","foregroundColor","lowlightColor","playingColor","randomNumber","n","Math","floor","random","rotate","array","start","modStart","mod","modNotes","useNearestModulo","pp","m","q","React","useRef","current","qq","round","randomSteps","aug2ndProb","doubleHalfStepsProb","patternSubset","filter","steps","prob","predicate","Slider","value","setValue","type","className","min","max","onChange","target","Switch","onClick","defaultChecked","App","useState","offset","setOffset","root","setRoot","moveRoot","setMoveRoot","setDoubleHalfStepsProb","setAug2ndProb","stepsBetween","setStepsBetween","loaded","state","setState","width","window","innerWidth","height","innerHeight","setWindow","synth","useMemo","Synth","targetRoot","targetOffset","useSpring","springRoot","springOffset","config","tension","friction","mass","playing","notesToPlay","useEffect","resizeListener","addEventListener","removeEventListener","keyDownListener","key","keyUpListener","interval","note","triggerAttack","octave","setInterval","triggerRelease","clearInterval","toDestination","containerSize","arcSize","PI","arcGen","d3","padAngle","innerRadius","outerRadius","startAngle","i","endAngle","cornerRadius","arcs","_","fontStyle","setNotesToPlay","then","absIndices","reduce","soFar","modIndices","included","includes","colors","inc","arcInfo","x","noteNames","replace","noteNamesInfo","setRandomScale","style","aria-pressed","color","div","interpolate","r","absIndex","d","stroke","aria-labelledby","role","tabIndex","newOffset","indexOf","name","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c38e4672.chunk.js","sourcesContent":["export type Note = { sharp: string; flat: string };\nexport const notes: Note[] = [\n  { sharp: \"c\", flat: \"c\" },\n  { sharp: \"c#\", flat: \"db\" },\n  { sharp: \"d\", flat: \"d\" },\n  { sharp: \"d#\", flat: \"eb\" },\n  { sharp: \"e\", flat: \"e\" },\n  { sharp: \"f\", flat: \"f\" },\n  { sharp: \"f#\", flat: \"gb\" },\n  { sharp: \"g\", flat: \"g\" },\n  { sharp: \"g#\", flat: \"ab\" },\n  { sharp: \"a\", flat: \"a\" },\n  { sharp: \"a#\", flat: \"bb\" },\n  { sharp: \"b\", flat: \"b\" },\n];\nexport const NUM_NOTES = notes.length;\n","import { flatten, zip } from \"fp-ts/lib/Array\";\nimport { NUM_NOTES } from \"./notes\";\nimport { Steps } from \"./util\";\n\ntype AScale = { head: [1]; tail: B } | { head: [1, 1]; tail: B };\ntype BScale =\n  | { head: [2]; tail: C }\n  | { head: [2, 3]; tail: C }\n  | { head: [3]; tail: A };\ntype CScale = A | B | null;\n\ntype A = { tag: \"A\"; scale: AScale };\ntype B = { tag: \"B\"; scale: BScale };\ntype C = { tag: \"C\"; scale: CScale };\n\nfunction AScales(len: number): A[] {\n  if (len <= 1) {\n    return [];\n  }\n  return flatten<AScale>([\n    BScales(len - 1).map((b: B) => ({ head: [1], tail: b })),\n    BScales(len - 2).map((b: B) => ({ head: [1, 1], tail: b })),\n  ]).map((a: AScale) => ({ tag: \"A\", scale: a }));\n}\n\nfunction BScales(len: number): B[] {\n  if (len <= 0) {\n    return [];\n  }\n  return flatten<BScale>([\n    AScales(len - 3).map((a: A): BScale => ({ head: [3], tail: a })),\n    CScales(len - 2).map((c: C) => ({ head: [2], tail: c })),\n    CScales(len - 5).map((c: C) => ({ head: [2, 3], tail: c })),\n  ]).map((b: BScale) => ({ tag: \"B\", scale: b }));\n}\n\nfunction CScales(len: number): C[] {\n  if (len < 0) {\n    return [];\n  } else if (len === 0) {\n    return [{ tag: \"C\", scale: null }];\n  } else {\n    return flatten<A | B>([AScales(len), BScales(len)]).map((c: CScale) => ({\n      tag: \"C\",\n      scale: c,\n    }));\n  }\n}\n\nfunction getStepsA(a: A): Steps {\n  const head: Steps = a.scale.head;\n  if (a.scale.tail === null) {\n    return head;\n  }\n  return head.concat(getStepsB(a.scale.tail));\n}\n\nfunction getStepsB(b: B): Steps {\n  const head: Steps = b.scale.head;\n  switch (b.scale.tail.tag) {\n    case \"A\":\n      return head.concat(getStepsA(b.scale.tail));\n    case \"C\":\n      return head.concat(getStepsC(b.scale.tail));\n  }\n}\n\nfunction getStepsC(c: C): Steps {\n  if (c.scale === null) {\n    return [];\n  }\n  switch (c.scale.tag) {\n    case \"A\":\n      return getStepsA(c.scale);\n    case \"B\":\n      return getStepsB(c.scale);\n  }\n}\n\nexport function hasDoubleHalfSteps(scale: Steps): boolean {\n  return zip(scale, scale.slice(1)).some(([a, b]) => a === 1 && b === 1);\n}\n\nexport function hasAug2nd(scale: Steps): boolean {\n  return scale.some((s) => s === 3);\n}\n\nexport const patterns = CScales(NUM_NOTES).map(getStepsC);\n","import React from \"react\";\nimport { notes } from \"./notes\";\nimport { hasAug2nd, hasDoubleHalfSteps, patterns } from \"./scales\";\n\nexport const highlightColor = getComputedStyle(\n  document.documentElement\n).getPropertyValue(\"--hl\");\nexport const foregroundColor = getComputedStyle(\n  document.documentElement\n).getPropertyValue(\"--fg\");\nexport const lowlightColor = getComputedStyle(\n  document.documentElement\n).getPropertyValue(\"--ll\");\nexport const playingColor = getComputedStyle(\n  document.documentElement\n).getPropertyValue(\"--pl\");\nexport type Steps = number[];\nexport type State =\n  | { loaded: false }\n  | {\n      loaded: true;\n      notesToPlay: Steps;\n    };\n\nexport function randomNumber(n: number): number {\n  return Math.floor(Math.random() * n);\n}\n\nexport function randomChoice<X>(array: X[]): X {\n  return array[randomNumber(array.length)];\n}\n\nexport function rotate<X>(array: X[], start: number) {\n  let modStart = mod(start, array.length);\n  return array.slice(modStart).concat(array.slice(0, modStart));\n}\n\nfunction mod(a: number, b: number) {\n  return ((a % b) + b) % b;\n}\n\nexport function modNotes(a: number) {\n  return mod(a, notes.length);\n}\n\n// useNearestModulo returns a value minimizing the distance traveled around a\n// circle. It always satisfies useNearestModulo(P, M) % M = P.\n//\n// useNearestModulo(P', M) = Q' such that Q' % M = P' but minimizing |Q' - Q|,\n// where Q is the return value from the previous call. The returned value Q' is\n// then used as the Q for the next call, and so forth.\n//\n// In the code below, P' is pp and Q' is qq.\n//\n// Example (sequence of calls):\n//   useNearestModulo( 0, 12) =  0\n//   useNearestModulo(10, 12) = -2\n//   useNearestModulo( 3, 12) =  3\n//   useNearestModulo( 7, 12) =  7\n//   useNearestModulo(10, 12) = 10\nexport function useNearestModulo(pp: number, m: number): number {\n  const q = React.useRef<number | null>(null);\n\n  // If the function hasn't been called yet, just return P' which satisfies\n  // P' % M = P', but record it as Q for the next call.\n  if (q.current == null) {\n    q.current = pp;\n    return pp;\n  }\n\n  // Calculate Q' that gets as close to Q as possible while satisfying\n  // Q' % M = P'.\n  const qq = Math.round((q.current - pp) / m) * m + pp;\n  q.current = qq;\n  return qq;\n}\n\nexport const randomSteps = (\n  aug2ndProb: number,\n  doubleHalfStepsProb: number\n) => {\n  const patternSubset = patterns\n    .filter(\n      Math.random() < aug2ndProb ? hasAug2nd : (s: Steps) => !hasAug2nd(s)\n    )\n    .filter(\n      Math.random() < doubleHalfStepsProb\n        ? hasDoubleHalfSteps\n        : (s: Steps) => !hasDoubleHalfSteps(s)\n    );\n  const steps = randomChoice(patternSubset);\n  return rotate(steps, randomNumber(steps.length));\n};\n\nexport function prob(predicate: (scale: Steps) => boolean) {\n  return (100 * patterns.filter(predicate).length) / patterns.length;\n}\n","import React, { Dispatch, SetStateAction } from \"react\";\nimport \"./scales\";\nimport { hasAug2nd, hasDoubleHalfSteps } from \"./scales\";\nimport { Note, notes } from \"./notes\";\nimport { start, Synth } from \"tone\";\nimport * as d3 from \"d3\";\nimport \"./styles.scss\";\nimport { animated, useSpring } from \"react-spring\";\nimport { zip } from \"fp-ts/Array\";\nimport {\n  highlightColor,\n  foregroundColor,\n  modNotes,\n  playingColor,\n  prob,\n  randomNumber,\n  randomSteps,\n  rotate,\n  State,\n  Steps,\n  useNearestModulo,\n  lowlightColor,\n} from \"./util\";\n\nconst Slider: React.FC<{\n  value: number;\n  setValue: Dispatch<SetStateAction<number>>;\n}> = ({ value, setValue }) => {\n  return (\n    <input\n      type=\"range\"\n      className={\"slider\"}\n      min={0}\n      max={100}\n      value={value}\n      onChange={({ target }) => {\n        setValue(+target.value);\n      }}\n    />\n  );\n};\n\nconst Switch: React.FC<{\n  value: boolean;\n  setValue: Dispatch<SetStateAction<boolean>>;\n}> = ({ value, setValue }) => (\n  <label className=\"switch\">\n    <input\n      type=\"checkbox\"\n      onClick={() => setValue(!value)}\n      defaultChecked={!value}\n    />\n    <span className=\"slide\" />\n  </label>\n);\n\nexport default function App(): JSX.Element {\n  const [offset, setOffset]: [\n    number,\n    React.Dispatch<React.SetStateAction<number>>\n  ] = React.useState<number>(0);\n  const [root, setRoot] = React.useState<number>(0);\n  const [moveRoot, setMoveRoot] = React.useState<boolean>(true);\n  const [doubleHalfStepsProb, setDoubleHalfStepsProb] = React.useState<number>(\n    prob(hasDoubleHalfSteps)\n  );\n  const [aug2ndProb, setAug2ndProb] = React.useState<number>(prob(hasAug2nd));\n  const [stepsBetween, setStepsBetween] = React.useState<Steps>(\n    randomSteps(aug2ndProb, doubleHalfStepsProb)\n  );\n  const [state, setState] = React.useState<State>({ loaded: false });\n  const [{ width, height }, setWindow] = React.useState<{\n    width: number;\n    height: number;\n  }>({ width: window.innerWidth, height: window.innerHeight });\n  const synth = React.useMemo(() => new Synth(), []);\n  const targetRoot = useNearestModulo(root, notes.length);\n  const targetOffset = useNearestModulo(offset, notes.length);\n  const { springRoot, springOffset } = useSpring({\n    springRoot: targetRoot,\n    springOffset: targetOffset,\n    config: { tension: 200, friction: 120, mass: 10 },\n  });\n\n  const playing: boolean = state.loaded && state.notesToPlay.length > 0;\n  const octave: number = 3;\n\n  React.useEffect(() => {\n    const resizeListener = () =>\n      setWindow({ width: window.innerWidth, height: window.innerHeight });\n    window.addEventListener(\"resize\", resizeListener);\n    return () => {\n      window.removeEventListener(\"resize\", resizeListener);\n    };\n  }, [setWindow]);\n\n  React.useEffect(() => {\n    const keyDownListener = ({ key }: { key: string }) => {\n      if (key === \"Shift\") setMoveRoot(false);\n      if (key === \"Enter\") {\n        setMoveRoot(!moveRoot);\n      }\n    };\n    const keyUpListener = ({ key }: { key: string }) => {\n      if (key === \"Shift\") setMoveRoot(true);\n    };\n    window.addEventListener(\"keydown\", keyDownListener);\n    window.addEventListener(\"keyup\", keyUpListener);\n    return () => {\n      window.removeEventListener(\"keydown\", keyDownListener);\n      window.removeEventListener(\"keyup\", keyUpListener);\n    };\n  }, [moveRoot, setMoveRoot]);\n\n  React.useEffect(() => {\n    if (state.loaded) {\n      const [head, ...tail]: Steps = state.notesToPlay;\n      if (playing) {\n        let interval: number | null = null;\n        const note = notes[head % notes.length];\n        synth.triggerAttack(\n          `${note.sharp}${head < notes.length ? octave : octave + 1}`\n        );\n        // @ts-ignore\n        interval = setInterval(() => {\n          setState({ ...state, notesToPlay: tail });\n        }, 300);\n        return () => {\n          synth.triggerRelease();\n          if (interval) clearInterval(interval);\n        };\n      }\n    } else {\n      synth.toDestination();\n      setState({\n        loaded: true,\n        notesToPlay: [],\n      });\n    }\n  }, [state, playing]);\n\n  const containerSize = Math.min(width - 30, height - 30);\n  const arcSize = (2 * Math.PI) / notes.length;\n  const arcGen = d3\n    .arc<number>()\n    .padAngle(0.1)\n    .innerRadius(containerSize / 2.9)\n    .outerRadius(containerSize / 2)\n    .startAngle((i: number) => (i - 0.5) * arcSize)\n    .endAngle((i: number) => (i + 0.5) * arcSize)\n    .cornerRadius(containerSize);\n  const arcs = notes.map((_, i) => arcGen(i) as string);\n  const fontSize = `${containerSize / 50}pt`;\n  const fontStyle = { \"--f\": fontSize } as any;\n  const randomAdjacent = () => {};\n  const setRandomRoot = () => {\n    setRoot(randomNumber(notes.length));\n    setOffset(0);\n    setNotesToPlay([]);\n  };\n  const setNotesToPlay = (notes: Steps) => {\n    if (state.loaded) {\n      if (playing) {\n        setState({ ...state, notesToPlay: [] });\n      } else {\n        start().then(() => setState({ ...state, notesToPlay: notes }));\n      }\n    }\n  };\n\n  const absIndices: Steps = stepsBetween.reduce(\n    (soFar: Steps, n: number) => soFar.concat(soFar[soFar.length - 1] + n),\n    [root]\n  );\n  const modIndices = absIndices.map((i) => i % notes.length);\n  const included = notes.map((_, i) => modIndices.includes(i));\n  const colors = included.map((inc, i) => {\n    if (\n      state.loaded &&\n      state.notesToPlay.length > 0 &&\n      modNotes(state.notesToPlay[0]) === i\n    )\n      return playingColor;\n    if (inc) return highlightColor;\n    return foregroundColor;\n  });\n  const arcInfo: [[number, boolean, string], string][] = zip(\n    rotate(\n      zip(included, colors).map(([...x], i) => [i, ...x]),\n      root - offset\n    ),\n    arcs\n  );\n\n  const noteNames = notes.map((note: Note) =>\n    note.sharp === note.flat\n      ? note.sharp\n      : `${note.sharp}/${note.flat}`\n          .replace(/(\\w)#/, \"$1♯\")\n          .replace(/(\\w)b/, \"$1♭\")\n  );\n  const noteNamesInfo = rotate(zip(noteNames, colors), root);\n\n  const setRandomScale = () => {\n    return setStepsBetween(randomSteps(aug2ndProb, doubleHalfStepsProb));\n  };\n  return (\n    <div\n      className={\"container\"}\n      style={{ \"--s\": `${containerSize}px`, \"--m\": notes.length } as any}\n    >\n      <div className={\"buttons\"}>\n        <button style={fontStyle} onClick={setRandomRoot}>\n          Randomize Root\n        </button>\n        <button style={fontStyle} onClick={setRandomScale}>\n          Randomize Scale\n        </button>\n        <button style={fontStyle} onClick={setRandomScale}>\n          Random adjacent Scale\n        </button>\n        <button\n          style={fontStyle}\n          onClick={() => setNotesToPlay(absIndices)}\n          aria-pressed={playing}\n        >\n          {playing ? \"Pause\" : \"Play\"}\n        </button>\n        <span style={{ ...fontStyle, color: lowlightColor } as any}>\n          Click on a note or shift-click on a yellow note.\n        </span>\n        <Switch value={moveRoot} setValue={setMoveRoot} />\n        <span>Probability of consecutive half-steps</span>\n        <Slider value={doubleHalfStepsProb} setValue={setDoubleHalfStepsProb} />\n        <span>Probability of augmented 2nd</span>\n        <Slider value={aug2ndProb} setValue={setAug2ndProb} />\n      </div>\n      <animated.div\n        className={\"necklace\"}\n        style={{ \"--r\": springOffset.interpolate((r: number) => -r) } as any}\n      >\n        {arcInfo.map(([[absIndex, included, color], d], i: number) => (\n          <svg className={\"svg\"} key={i} style={{ \"--c\": color } as any}>\n            <path\n              className={\"path\"}\n              stroke={color}\n              d={d}\n              aria-labelledby={`note${absIndex}`}\n              role={\"button\"}\n              tabIndex={0}\n              onClick={() => {\n                const newOffset = modNotes(offset + (absIndex - root));\n                // setNotesToPlay([]);\n                if (moveRoot) {\n                  setRoot(absIndex);\n                } else if (included) {\n                  setOffset(newOffset);\n                  setStepsBetween(\n                    rotate(stepsBetween, modIndices.indexOf(absIndex))\n                  );\n                }\n              }}\n            />\n          </svg>\n        ))}\n        <animated.div\n          className={\"note-names\"}\n          style={{ \"--a\": springRoot.interpolate((r) => root - r) } as any}\n        >\n          {noteNamesInfo.map(([name, color], i) => (\n            <span\n              style={{ \"--i\": i, \"--c\": color, ...fontStyle } as any}\n              id={`note${root + i}`}\n              key={i}\n            >\n              {name}\n            </span>\n          ))}\n        </animated.div>\n      </animated.div>\n    </div>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}