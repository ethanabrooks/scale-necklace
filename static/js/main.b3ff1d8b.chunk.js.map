{"version":3,"sources":["notes.ts","scales.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["notes","sharp","flat","AScales","len","flatten","BScales","map","b","head","tail","a","tag","scale","CScales","c","getStepsA","concat","getStepsB","getStepsC","scales","length","highlightColor","getComputedStyle","document","documentElement","getPropertyValue","lowLightColor","playingColor","randomNumber","n","Math","floor","random","rotate","array","start","modStart","mod","slice","modNotes","useNearestModulo","pp","m","q","React","useRef","current","qq","round","App","useState","stepsBetween","setStepsBetween","offset","setOffset","root","setRoot","loaded","state","setState","width","window","innerWidth","height","innerHeight","setWindow","targetRoot","targetOffset","useSpring","springRoot","springOffset","config","tension","friction","mass","playing","notesToPlay","useEffect","listener","addEventListener","removeEventListener","synth","Synth","toDestination","interval","note","triggerAttack","octave","setInterval","triggerRelease","clearInterval","setRootNearestModule","newRoot","setOffsetNearestModule","newOffset","containerSize","min","fontSize","arcSize","PI","fontStyle","absIndices","reduce","soFar","modIndices","i","included","_","includes","colors","inc","arcGen","d3","padAngle","innerRadius","outerRadius","startAngle","endAngle","cornerRadius","arcs","arcInfo","zip","x","noteNames","replace","noteNamesInfo","className","style","onClick","newScale","div","interpolate","r","absIndex","color","d","stroke","e","shiftKey","indexOf","name","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b3ff1d8b.chunk.js","sourcesContent":["export type Note = { sharp: string; flat: string };\nexport const notes: Note[] = [\n  { sharp: \"c\", flat: \"c\" },\n  { sharp: \"c#\", flat: \"db\" },\n  { sharp: \"d\", flat: \"d\" },\n  { sharp: \"d#\", flat: \"eb\" },\n  { sharp: \"e\", flat: \"e\" },\n  { sharp: \"f\", flat: \"f\" },\n  { sharp: \"f#\", flat: \"gb\" },\n  { sharp: \"g\", flat: \"g\" },\n  { sharp: \"g#\", flat: \"ab\" },\n  { sharp: \"a\", flat: \"a\" },\n  { sharp: \"a#\", flat: \"bb\" },\n  { sharp: \"b\", flat: \"b\" },\n];\nexport const NUM_NOTES = notes.length;\n","import { flatten } from \"fp-ts/lib/Array\";\nimport { NUM_NOTES } from \"./notes\";\n\ntype AScale = { head: [1]; tail: B } | { head: [1, 1]; tail: B };\ntype BScale =\n  | { head: [2]; tail: C }\n  | { head: [2, 3]; tail: C }\n  | { head: [3]; tail: A };\ntype CScale = A | B | null;\n\ntype A = { tag: \"A\"; scale: AScale };\ntype B = { tag: \"B\"; scale: BScale };\ntype C = { tag: \"C\"; scale: CScale };\n\nfunction AScales(len: number): A[] {\n  if (len <= 1) {\n    return [];\n  }\n  return flatten<AScale>([\n    BScales(len - 1).map((b: B) => ({ head: [1], tail: b })),\n    BScales(len - 2).map((b: B) => ({ head: [1, 1], tail: b })),\n  ]).map((a: AScale) => ({ tag: \"A\", scale: a }));\n}\n\nfunction BScales(len: number): B[] {\n  if (len <= 0) {\n    return [];\n  }\n  return flatten<BScale>([\n    AScales(len - 3).map((a: A): BScale => ({ head: [3], tail: a })),\n    CScales(len - 2).map((c: C) => ({ head: [2], tail: c })),\n    CScales(len - 5).map((c: C) => ({ head: [2, 3], tail: c })),\n  ]).map((b: BScale) => ({ tag: \"B\", scale: b }));\n}\n\nfunction CScales(len: number): C[] {\n  if (len < 0) {\n    return [];\n  } else if (len == 0) {\n    return [{ tag: \"C\", scale: null }];\n  } else {\n    return flatten<A | B>([AScales(len), BScales(len)]).map((c: CScale) => ({\n      tag: \"C\",\n      scale: c,\n    }));\n  }\n}\n\nfunction getStepsA(a: A): number[] {\n  const head: number[] = a.scale.head;\n  if (a.scale.tail === null) {\n    return head;\n  }\n  return head.concat(getStepsB(a.scale.tail));\n}\n\nfunction getStepsB(b: B): number[] {\n  const head: number[] = b.scale.head;\n  switch (b.scale.tail.tag) {\n    case \"A\":\n      return head.concat(getStepsA(b.scale.tail));\n    case \"C\":\n      return head.concat(getStepsC(b.scale.tail));\n  }\n}\n\nfunction getStepsC(c: C): number[] {\n  if (c.scale === null) {\n    return [];\n  }\n  switch (c.scale.tag) {\n    case \"A\":\n      return getStepsA(c.scale);\n    case \"B\":\n      return getStepsB(c.scale);\n  }\n}\n\nexport const scales: number[][] = CScales(NUM_NOTES).map(getStepsC);\n","import React, { useEffect, useState } from \"react\";\nimport \"./scales\";\nimport { scales } from \"./scales\";\nimport { Note, notes } from \"./notes\";\nimport { Synth } from \"tone\";\nimport * as d3 from \"d3\";\nimport \"./styles.scss\";\nimport { animated, useSpring } from \"react-spring\";\nimport { zip } from \"fp-ts/Array\";\n\nconst highlightColor = getComputedStyle(\n  document.documentElement\n).getPropertyValue(\"--hl\");\nconst lowLightColor = getComputedStyle(\n  document.documentElement\n).getPropertyValue(\"--ll\");\nconst playingColor = getComputedStyle(\n  document.documentElement\n).getPropertyValue(\"--pl\");\n\nexport type Scale = number[];\nexport type State =\n  | { loaded: false }\n  | {\n      loaded: true;\n      synth: Synth;\n      notesToPlay: Scale;\n    };\n\nfunction randomNumber(n: number): number {\n  return Math.floor(Math.random() * n);\n}\n\nfunction rotate<X>(array: X[], start: number) {\n  let modStart = mod(start, array.length);\n  return array.slice(modStart).concat(array.slice(0, modStart));\n}\n\nfunction mod(a: number, b: number) {\n  return ((a % b) + b) % b;\n}\n\nfunction modNotes(a: number) {\n  return mod(a, notes.length);\n}\n\n// useNearestModulo returns a value minimizing the distance traveled around a\n// circle. It always satisfies useNearestModulo(P, M) % M = P.\n//\n// useNearestModulo(P', M) = Q' such that Q' % M = P' but minimizing |Q' - Q|,\n// where Q is the return value from the previous call. The returned value Q' is\n// then used as the Q for the next call, and so forth.\n//\n// In the code below, P' is pp and Q' is qq.\n//\n// Example (sequence of calls):\n//   useNearestModulo( 0, 12) =  0\n//   useNearestModulo(10, 12) = -2\n//   useNearestModulo( 3, 12) =  3\n//   useNearestModulo( 7, 12) =  7\n//   useNearestModulo(10, 12) = 10\nfunction useNearestModulo(pp: number, m: number): number {\n  const q = React.useRef<number | null>(null);\n\n  // If the function hasn't been called yet, just return P' which satisfies\n  // P' % M = P', but record it as Q for the next call.\n  if (q.current == null) {\n    q.current = pp;\n    return pp;\n  }\n\n  // Calculate Q' that gets as close to Q as possible while satisfying\n  // Q' % M = P'.\n  const qq = Math.round((q.current - pp) / m) * m + pp;\n  q.current = qq;\n  return qq;\n}\n\nexport default function App(): JSX.Element {\n  const [stepsBetween, setStepsBetween] = React.useState<Scale>(scales[0]);\n  const [offset, setOffset] = React.useState<number>(0);\n  const [root, setRoot] = React.useState<number>(0);\n  const [state, setState] = useState<State>({ loaded: false });\n  const [{ width, height }, setWindow] = React.useState<{\n    width: number;\n    height: number;\n  }>({ width: window.innerWidth, height: window.innerHeight });\n  const targetRoot = useNearestModulo(root, notes.length);\n  const targetOffset = useNearestModulo(offset, notes.length);\n  const { springRoot, springOffset } = useSpring({\n    springRoot: targetRoot,\n    springOffset: targetOffset,\n    config: { tension: 200, friction: 120, mass: 10 },\n  });\n  const playing: boolean = state.loaded && state.notesToPlay.length > 0;\n\n  React.useEffect(() => {\n    const listener = () =>\n      setWindow({ width: window.innerWidth, height: window.innerHeight });\n    window.addEventListener(\"resize\", listener);\n    return () => window.removeEventListener(\"resize\", listener);\n  }, [setWindow]);\n\n  useEffect(() => {\n    let synth = new Synth().toDestination();\n    setState({\n      loaded: true,\n      synth: synth,\n      notesToPlay: [],\n    });\n  }, [setState]);\n\n  useEffect(() => {\n    if (state.loaded) {\n      const [head, ...tail]: Scale = state.notesToPlay;\n      if (playing) {\n        let interval: number | null = null;\n        const note = notes[head % notes.length];\n        state.synth.triggerAttack(\n          `${note.sharp}${head < notes.length ? octave : octave + 1}`\n        );\n        // @ts-ignore\n        interval = setInterval(() => {\n          setState({ ...state, notesToPlay: tail });\n        }, 300);\n        return () => {\n          state.synth.triggerRelease();\n          if (interval) clearInterval(interval);\n        };\n      }\n    }\n  }, [state, playing]);\n\n  const setRootNearestModule = (newRoot: number) => setRoot(newRoot);\n  const setOffsetNearestModule = (newOffset: number) => setOffset(newOffset);\n  const octave: number = 3;\n  const containerSize = Math.min(width - 30, height - 30);\n  const fontSize = `${containerSize / 50}pt`;\n  const arcSize = (2 * Math.PI) / notes.length;\n  const fontStyle = { \"--f\": fontSize } as any;\n  const setRandomRoot = () => {\n    setRootNearestModule(randomNumber(notes.length));\n    setOffsetNearestModule(0);\n  };\n  let setRandomScale = () => {\n    const newScale = scales[randomNumber(scales.length)];\n    setStepsBetween(rotate(newScale, randomNumber(newScale.length)));\n  };\n  const setNotesToPlay = () => {\n    if (state.loaded)\n      setState({\n        ...state,\n        notesToPlay: playing ? [] : absIndices,\n      });\n  };\n\n  const absIndices: Scale = stepsBetween.reduce(\n    (soFar: Scale, n: number) => soFar.concat(soFar[soFar.length - 1] + n),\n    [root]\n  );\n  const modIndices = absIndices.map((i) => i % notes.length);\n  const included = notes.map((_, i) => modIndices.includes(i));\n  const colors = included.map((inc, i) => {\n    if (\n      state.loaded &&\n      state.notesToPlay.length > 0 &&\n      modNotes(state.notesToPlay[0]) === i\n    )\n      return playingColor;\n    if (inc) return highlightColor;\n    return lowLightColor;\n  });\n  const arcGen = d3\n    .arc<number>()\n    .padAngle(0.05)\n    .innerRadius(containerSize / 2.8)\n    .outerRadius(containerSize / 2)\n    .startAngle((i: number) => (i - 0.5) * arcSize)\n    .endAngle((i: number) => (i + 0.5) * arcSize)\n    .cornerRadius(containerSize);\n  const arcs = notes.map((_, i) => arcGen(i) as string);\n  const arcInfo: [[number, boolean, string], string][] = zip(\n    rotate(\n      zip(included, colors).map(([...x], i) => [i, ...x]),\n      root - offset\n    ),\n    arcs\n  );\n\n  const noteNames = notes.map((note: Note) =>\n    note.sharp === note.flat\n      ? note.sharp\n      : `${note.sharp}/${note.flat}`\n          .replace(/(\\w)#/, \"$1♯\")\n          .replace(/(\\w)b/, \"$1♭\")\n  );\n  const noteNamesInfo = rotate(zip(noteNames, colors), root);\n\n  return (\n    <div\n      className={\"container\"}\n      style={{ \"--s\": `${containerSize}px`, \"--m\": notes.length } as any}\n    >\n      <div className={\"buttons\"}>\n        <button style={fontStyle} onClick={setRandomRoot}>\n          Randomize Root\n        </button>\n        <button style={fontStyle} onClick={setRandomScale}>\n          Randomize Scale\n        </button>\n        <button style={fontStyle} onClick={setNotesToPlay}>\n          {playing ? \"Pause\" : \"Play\"}\n        </button>\n      </div>\n      <animated.div\n        className={\"necklace\"}\n        style={{ \"--r\": springOffset.interpolate((r: number) => -r) } as any}\n      >\n        {arcInfo.map(([[absIndex, included, color], d], i: number) => (\n          <svg className={\"svg\"} key={i} style={{ \"--c\": color } as any}>\n            <path\n              className={\"path\"}\n              stroke={color}\n              d={d}\n              onClick={(e: React.MouseEvent<SVGPathElement>) => {\n                let newOffset = modNotes(offset + (absIndex - root));\n                if (e.shiftKey) {\n                  if (included) {\n                    setOffsetNearestModule(newOffset);\n                    setStepsBetween(\n                      rotate(stepsBetween, modIndices.indexOf(absIndex))\n                    );\n                  }\n                } else {\n                  setRootNearestModule(absIndex);\n                  setOffsetNearestModule(offset + (absIndex - root));\n                }\n              }}\n            />\n          </svg>\n        ))}\n        <animated.div\n          className={\"note-names\"}\n          style={{ \"--a\": springRoot.interpolate((r) => root - r) } as any}\n        >\n          {noteNamesInfo.map(([name, color], i) => (\n            <a style={{ \"--i\": i, \"--c\": color, ...fontStyle } as any} key={i}>\n              {name}\n            </a>\n          ))}\n        </animated.div>\n      </animated.div>\n    </div>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}